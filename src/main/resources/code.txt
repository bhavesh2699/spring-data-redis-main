import React, { useState, useEffect } from 'react';

function getColIdxFromInputKey(data, inputKey) {
  const { config } = data[0];
  const { inputs } = config.columns;
  const colIdx = inputs.find(col => col.colName === inputKey)?.colIdx;
  return colIdx;
}

function getCellDataForColIdx(data, colIdx) {
  const { data: { rows } } = data[0];
  const cellData = rows.map(row => row.cols.find(col => col.colIdx === colIdx)?.cellData || '');
  return cellData.join(', ');
}

function App() {
  const [data, setData] = useState([/* Your JSON data here */]);
  const inputKey = 'rev_bic8';

  useEffect(() => {
    const colIdx = getColIdxFromInputKey(data, inputKey);
    if (colIdx !== undefined) {
      const cellData = getCellDataForColIdx(data, colIdx);
      console.log(cellData);
    }
  }, [data, inputKey]);

  return (
    <div>
      {/* Your UI components here */}
    </div>
  );
}

export default App;



============================


// Parse JSON string
        Gson gson = new Gson();
        JsonObject jsonObject = gson.fromJson(jsonString, JsonObject.class);
        JsonArray rows = jsonObject.get("data").getAsJsonObject().get("rows").getAsJsonArray();

        // Split input bics
        String[] inputBicArray = inputBics.split(",");

        // Initialize empty string to store comma-separated owners
        StringBuilder ownerString = new StringBuilder();

        // Optimize the loop by using a HashMap to store BIC-owner pairs
        HashMap<String, String> bicOwnerMap = new HashMap<>();
        for (int i = 0; i < rows.size(); i++) {
            JsonObject row = rows.get(i).getAsJsonObject();
            JsonArray cols = row.get("cols").getAsJsonArray();
            String currentBic = cols.get(0).getAsJsonObject().get("cellData").getAsString();
            String owner = cols.get(1).getAsJsonObject().get("cellData").getAsString();
            bicOwnerMap.put(currentBic, owner);
        }

        // Iterate over input BICs and retrieve owners from the map
        for (String bic : inputBicArray) {
            String owner = bicOwnerMap.get(bic);
            if (owner != null) {
                ownerString.append(owner).append(",");
            }
        }

        // Remove the trailing comma
        if (ownerString.length() > 0) {
            ownerString.deleteCharAt(ownerString.length() - 1);
        }

        System.out.println(ownerString.toString());
    }
}